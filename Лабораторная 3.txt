/*Задание 14*/
SELECT * FROM T_MESSURE;
SELECT * FROM T_CATERER;

/*Задание 15*/
SELECT ID_MATERIAL, NAME, ID_GROUP FROM T_MATERIAL;
    
/*Задание 16*/
SELECT NAME, SURNAME, FATHER_NAME, BIRTHDATE_DATE FROM T_EMPLOYER;


/*Задание 17*/
SELECT * FROM T_EMPLOYER 
  WHERE SEX = 'М';

/*Задание 18*/
SELECT * FROM T_CATERER 
  WHERE ID_CATERER IN
    (SELECT ID_CATERER FROM T_SUPPLY
    WHERE SUPPLY_DATE >= '01.03.2009'
    AND SUPPLY_DATE <= '30.06.2009');

/*Задание 19*/
SELECT * FROM T_SECTION
  WHERE ID_SECTION IN
  (SELECT ID_SECTION FROM T_DELIVER
  WHERE DELIVER_DATE >= '01.08.2009'
  AND DELIVER_DATE <= '31.08.2009');

/*Задание 20*/
SELECT NAME FROM T_SECTION
  WHERE ID_SECTION IN
  (SELECT ID_SECTION FROM T_DELIVER
  WHERE DELIVER_DATE = SYSDATE);

/*Задание 21*/
SELECT NAME FROM T_MATERIAL
  WHERE ID_MATERIAL IN
  (SELECT ID_MATERIAL FROM T_SUPPLY
  WHERE SUPPLY_DATE >= '01.01.2017'
  AND SUPPLY_DATE <= SYSDATE);

/*Задание 22*/
SELECT NAME FROM T_MATERIAL
  WHERE ID_MATERIAL NOT IN
  (SELECT ID_MATERIAL FROM T_SUPPLY 
  WHERE SUPPLY_DATE >= '01.01.2017'
    AND SUPPLY_DATE <= SYSDATE)
  AND ID_MATERIAL IN
  (SELECT ID_MATERIAL FROM T_SURPLUS 
  WHERE VOLUME LIKE 0);

/*Задание 23*/
SELECT T_SECTION.ID_SECTION, T_SECTION.NAME, T_EMPLOYER.SURNAME, T_EMPLOYER.NAME, T_EMPLOYER.FATHER_NAME
  FROM T_SECTION, T_EMPLOYER
  WHERE T_SECTION.ID_EMPLOYER = T_EMPLOYER.ID_EMPLOYER;

/*Задание 24*/
SELECT T_SECTION.ID_SECTION, T_SECTION.NAME, T_EMPLOYER.NAME, T_EMPLOYER.SURNAME, T_EMPLOYER.FATHER_NAME, T_JOB.NAME
  FROM T_SECTION, T_EMPLOYER, T_JOB
  WHERE T_SECTION.ID_EMPLOYER = T_EMPLOYER.ID_EMPLOYER AND T_EMPLOYER.ID_JOB = T_JOB.ID_JOB;

/*Задание 25*/
SELECT T_CATERER.NAME, T_MATERIAL.NAME, T_SUPPLY.VOLUME, T_INPRICE.PRICE, T_SUPPLY.SUPPLY_DATE 
  FROM T_CATERER, T_MATERIAL, T_SUPPLY, T_INPRICE  
  WHERE T_CATERED IN 
  (SELECT ID_CATERER FROM T_SUPPLY
  WHERE SUPPLY_DATE BETWEEN '01.01.2009' AND '31.03.2009')
  AND T_MATERIAL.ID_MATERIAL = T_INPRICE.ID_MATERIAL
  AND T_MATERIAL.ID_MATERIAL = T_SUPPLY.ID_MATERIAL
  AND T_CATERER.ID_CATERER = T_SUPPLY.ID_CATERER;

/*Задание 26*/
SELECT T_CATERER.NAME, T_MATERIAL.NAME, T_SUPPLY.VOLUME, 
       T_INPRICE.PRICE, T_SUPPLY.SUPPLY_DATE
  FROM T_CATERER, T_MATERIAL, T_SUPPLY, T_INPRICE
  WHERE T_CATERER.ID_CATERER IN
    (SELECT ID_CATERER FROM T_SUPPLY 
       WHERE SUPPLY_DATE BETWEEN '01.01.2017' AND '29.03.2017')
  AND T_MATERIAL.ID_MATERIAL = T_INPRICE.ID_MATERIAL
  AND T_MATERIAL.ID_MATERIAL = T_SUPPLY.ID_MATERIAL
  AND T_CATERER.ID_CATERER = T_SUPPLY.ID_CATERER
  AND T_CATERER.LEGAL_ADDRES LIKE 'Пермь%';

/*Задание 27*/
SELECT T_MATERIAL.ID_MATERIAL, T_MATERIAL.NAME,
       T_STORE.NAME, T_SURPLUS.VOLUME
  FROM T_MATERIAL, T_STORE, T_SURPLUS
  WHERE T_STORE.ID_STORE = T_SURPLUS.ID_STORE
  AND T_MATERIAL.ID_MATERIAL = T_SURPLUS.ID_MATERIAL
  ORDER BY T_MATERIAL.ID_MATERIAL;

/*Задание 28*/
SELECT T_CATERER.NAME, T_MATERIAL.NAME, T_SUPPLY.VOLUME, 
       T_INPRICE.PRICE, T_SUPPLY.SUPPLY_DATE
  FROM T_CATERER JOIN T_MATERIAL
    ON T_CATERER.ID_CATERER IN 
      (SELECT ID_CATERER FROM T_SUPPLY 
       WHERE SUPPLY_DATE BETWEEN '01.01.2017' AND '31.05.2017')
  JOIN T_SUPPLY 
    ON T_SUPPLY.ID_MATERIAL = T_MATERIAL.ID_MATERIAL
      AND T_SUPPLY.ID_CATERER = T_CATERER.ID_CATERER
  JOIN T_INPRICE
    ON T_INPRICE.ID_MATERIAL = T_MATERIAL.ID_MATERIAL;

/*Задание 29*/
SELECT T_CATERER.NAME, T_MATERIAL.NAME, T_SUPPLY.VOLUME, T_INPRICE.PRICE, T_SUPPLY.SUPPLY_DATE
  FROM T_CATERER  
  LEFT JOIN T_SUPPLY  ON T_SUPPLY.ID_CATERER = T_CATERER.ID_CATERER
  LEFT JOIN T_MATERIAL  ON T_SUPPLY.ID_MATERIAL = T_MATERIAL.ID_MATERIAL
  LEFT JOIN T_INPRICE ON T_INPRICE.ID_MATERIAL = T_MATERIAL.ID_MATERIAL;

/*Задание 30*/
SELECT T_STORE.ID_STORE, T_STORE.NAME, T_MATERIAL.NAME, T_SURPLUS.VOLUME
  FROM T_STORE LEFT JOIN T_SURPLUS ON T_STORE.ID_STORE = T_SURPLUS.ID_STORE
  LEFT JOIN T_MATERIAL ON T_MATERIAL.ID_MATERIAL = T_SURPLUS.ID_MATERIAL
  ORDER BY T_STORE.ID_STORE;

/*Задание 31*/
SELECT T_MATERIAL.ID_MATERIAL, T_MATERIAL.NAME, T_MESSURE.NAME, T_INPRICE.PRICE
  FROM T_MATERIAL JOIN T_MESSURE ON T_MATERIAL.ID_MEASURE = T_MESSURE.ID_MEASURE
  JOIN T_INPRICE ON T_INPRICE.ID_MATERIAL = T_MATERIAL.ID_MATERIAL AND T_INPRICE.PRICE_DATE IN
    (SELECT PRICE_DATE FROM T_INPRICE 
       WHERE PRICE_DATE BETWEEN '01.07.2009' AND '30.09.2009');

/*Задание 32*/
SELECT T_MATERIAL.ID_MATERIAL, T_MATERIAL.NAME, T_MESSURE.NAME, T_INPRICE.PRICE
  FROM T_MATERIAL LEFT JOIN T_MESSURE ON T_MATERIAL.ID_MEASURE = T_MESSURE.ID_MESSURE
  LEFT JOIN T_INPRICE ON T_INPRICE.ID_MATERIAL = T_MATERIAL.ID_MATERIAL;

/*Задание 33*/
ALTER TABLE T_EMPLOYER
  ADD id_manager INT;
UPDATE T_EMPLOYER
  SET ID_MANAGER = 1
    WHERE ID_EMPLOYER BETWEEN 2 AND 4;
UPDATE T_EMPLOYER
  SET ID_MANAGER = 1
    WHERE ID_EMPLOYER LIKE 1;

/*Задание 34*/
ALTER TABLE T_GROUP
  ADD MINI_GROUP INT;
UPDATE T_GROUP
  SET MINI_GROUP = 1
    WHERE ID_GROUP BETWEEN 1 AND 5;
UPDATE T_GROUP
  SET MINI_GROUP = 2
    WHERE ID_GROUP > 3;
SELECT * FROM T_GROUP
    WHERE MINI_GROUP = 1;
SELECT *FROM T_GROUP
    WHERE MINI_GROUP=2;

/*Задание 35*/
CREATE TABLE T_Exemp (
  ID_EMPLOYER INT NOT NULL,
  SURNAME VARCHAR2(20) NOT NULL,
  NAME VARCHAR2(10) NOT NULL,
  FATHER_NAME VARCHAR2(20) NOT NULL,
  SEX CHAR,
  BIRTHDATE DATE,
  ID_MANAGER INT,
  ID_JOB INT,
  CONSTRAINT pk_exemp PRIMARY KEY (ID_EMPLOYER)
  );
INSERT INTO T_EXEMP (ID_EMPLOYER, SURNAME, NAME, FATHER_NAME, BIRTHDATE, ID_MANAGER, ID_JOB)
  VALUES (seq_employer.NEXTVAL, 'Фамилия1', 'Имя1', 'Отчество1', '14.12.1997', 1, 1);
INSERT INTO T_EXEMP (ID_EMPLOYER, SURNAME, NAME, FATHER_NAME, BIRTHDATE, ID_MANAGER, ID_JOB)
  VALUES (seq_employer.NEXTVAL, 'Фамилия2', 'Имя2', 'Отчество2', '28.05.1974', 2, 2);
INSERT INTO T_EXEMP (ID_EMPLOYER, SURNAME, NAME, FATHER_NAME, BIRTHDATE, ID_MANAGER, ID_JOB)
  VALUES (seq_employer.NEXTVAL, 'Фамилия3', 'Имя3', 'Отчество3', '11.10.1973', 3, 3);

/*Задание 36*/
ALTER TABLE T_EXEMP
  ADD DISMISSED DATE;
UPDATE T_EXEMP
  SET DISMISSED = '01.01.2017';

/*Задание 37*/
CREATE TABLE T_Contact (
  ID_CONTACT INT NOT NULL,
  ID_CATERER INT,
  SURNAME NVARCHAR2(20) NOT NULL,
  NAME NVARCHAR2(10) NOT NULL,
  FATHER_NAME NVARCHAR2(20),
  PHONE NUMBER(11) NOT NULL,
  CONSTRAINT PK_Contact PRIMARY KEY (ID_CONTACT),
  CONSTRAINT FK_Contact_Caterer
    FOREIGN KEY (ID_CATERER) REFERENCES T_CATERER(ID_CATERER) ON DELETE CASCADE
);
INSERT INTO T_CONTACT (ID_CONTACT, ID_CATERER, SURNAME, NAME, FATHER_NAME, PHONE)
  VALUES (1, 1, 'Фамилия1', 'Имя1', 'Отчество1', '89226410871');
INSERT INTO T_CONTACT (ID_CONTACT, ID_CATERER, SURNAME, NAME, FATHER_NAME, PHONE)
  VALUES (2, 2, 'Фамилия2', 'Имя2', 'Отчество2', '89226410872');
INSERT INTO T_CONTACT (ID_CONTACT, ID_CATERER, SURNAME, NAME, FATHER_NAME, PHONE)
  VALUES (3, 3, 'Фамилия3', 'Имя3', 'Отчество3', '89226410873');
SELECT SURNAME, NAME, FATHER_NAME, PHONE FROM T_CONTACT;

/*Задание 38*/
SELECT * FROM T_CATERER
  ORDER BY NAME;

/*Задание 39*/
SELECT * FROM T_CATERER JOIN T_CONTACT
    ON T_CATERER.ID_CATERER = T_CONTACT.ID_CATERER
  ORDER BY T_CATERER.NAME, T_CONTACT.SURNAME, T_CONTACT.NAME, FATHER_NAME;

/*Задание 40*/
SELECT T_STORE.NAME, T_MATERIAL.NAME, T_SURPLUS.VOLUME
  FROM T_STORE LEFT JOIN T_SURPLUS ON T_STORE.ID_STORE = T_SURPLUS.ID_STORE
  LEFT JOIN T_MATERIAL ON T_MATERIAL.ID_MATERIAL = T_SURPLUS.ID_MATERIAL
  ORDER BY T_STORE.ID_STORE, T_SURPLUS.VOLUME DESC; 

/*Задание 41*/
SELECT T_MATERIAL.NAME AS "Material", T_CATERER.NAME AS "Caterer", SUM(T_SUPPLY.VOLUME) AS "Volume"
  FROM T_CATERER JOIN T_SUPPLY ON T_CATERER.ID_CATERER = T_SUPPLY.ID_CATERER
  JOIN T_MATERIAL ON T_MATERIAL.ID_MATERIAL = T_SUPPLY.ID_MATERIAL
  WHERE T_SUPPLY.SUPPLY_DATE >= '01.01.2017'
     AND T_SUPPLY.SUPPLY_DATE <= '31.12.2017'
  GROUP BY T_MATERIAL.NAME, T_CATERER.NAME
  ORDER BY T_CATERER.NAME, T_MATERIAL.NAME;

/*Задание 42*/
SELECT T_MATERIAL.NAME AS "Material", AVG(T_SUPPLY.VOLUME * T_INPRICE.PRICE) AS "Sred"
  FROM T_MATERIAL LEFT JOIN T_SUPPLY ON T_MATERIAL.ID_MATERIAL = T_SUPPLY.ID_MATERIAL
  LEFT JOIN T_INPRICE ON T_MATERIAL.ID_MATERIAL = T_INPRICE.ID_MATERIAL
  WHERE T_SUPPLY.SUPPLY_DATE >= '01.01.2017'
    AND T_SUPPLY.SUPPLY_DATE <= '31.12.2017'
  GROUP BY T_MATERIAL.NAME
  ORDER BY T_MATERIAL.NAME;

/*Задание 43*/
SELECT T_MATERIAL.NAME AS "Material", SUM(T_SUPPLY.VOLUME) AS "Summ"
  FROM T_MATERIAL LEFT JOIN T_SUPPLY 
    ON T_MATERIAL.ID_MATERIAL = T_SUPPLY.ID_MATERIAL
  WHERE T_SUPPLY.SUPPLY_DATE >= '01.01.2017'
    AND T_SUPPLY.SUPPLY_DATE <= '31.12.2017'
  GROUP BY T_MATERIAL.NAME
  ORDER BY T_MATERIAL.NAME;

/*Задание 45*/
SELECT NAME FROM T_STORE INNER JOIN T_SURPLUS
  ON T_STORE.ID_STORE = T_SURPLUS.ID_STORE
  GROUP BY NAME HAVING SUM(VOLUME) = 0;

/*Задание 46*/
SELECT NAME FROM T_CATERER INNER JOIN T_SUPPLY 
  ON T_CATERED.ID_CATERER = T_SUPPLY.ID_CATERER
  WHERE SUPPLY_DATE >= '01.01.2017' 
  AND T_SUPPLY.SUPPLY_DATE <='31.12.2017'
  GROUP BY NAME HAVING SUM(VOLUME) < 1000;

/*Задание 47*/
SELECT NAME FROM T_CATERER JOIN T_SUPPLY 
  ON T_CATERED.ID_CATERER = T_SUPPLY.ID_CATERER
 WHERE SUPPLY_DATE >= '01.01.2017' 
    AND T_SUPPLY.SUPPLY_DATE <= '31.12.2017'
  GROUP BY NAME HAVING SUM(VOLUME) = MAX(VOLUME);
  GROUP BY NAME HAVING SUM(VOLUME) = MAX(VOLUME);